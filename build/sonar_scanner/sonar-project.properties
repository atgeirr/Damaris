# To use this file
# 1/ Install the build-wrapper-linux-x86-64 executable and set you PATH to point to it
# 2/ Run: > cmake .. 
#    from the damaris/build directory, using desired options
# 3/ Run: > build-wrapper-linux-x86-64 --out-dir build-wrapper-output-directory make clean all
# 4/ Copy this file to the root damris source directory
# 5/ Change "sonar.projectKey=kerdata:damaris_hdf5_pv" to a name that suits the options used in the build
# 6/ Change the paths sonar.projectBaseDir and sonar.cxx.includeDirectories to point to the repository source
# 6/ Run: > sonar-scanner
#    Make sure you have installed an Inria certificate and your personal login key is set at sonar.login below  

sonar.host.url=https://sonarqube.inria.fr/sonarqube
sonar.login=
sonar.projectKey=kerdata:damaris_hdf5_pv
sonar.projectVersion=1.5.0
# sonar.cfamily.compile-commands=compile_commands.json
sonar.sourceEncoding=UTF-8
sonar.lang.patterns.c++=**/*.cpp,**/*.hpp
sonar.lang.patterns.c=**/*.c,**/*.h
sonar.exclusions=CMakeFiles/**,cmake/**,doc/**,build/src/model/Model.hpp,build/include/damaris/model/Model.hpp,build/src/model/Model.cpp
sonar.c.gcc.regex=(?<file>.*):(?<line>[0-9]+):[0-9]+:\\\x20warning:\\\x20(?<message>.*)\\\x20\\\[(?<id>.*)\\\]
sonar.c.gcc.reportPath=build/build.log
# sonar.c.clangsa.reportPath=build/analyzer_reports/*/*.plist
# sonar.c.clangtidy.reportPath=clang-tidy-report
# sonar.c.coverage.reportPath=coverage.xml
# sonar.c.cppcheck.reportPath=cppcheck.xml
# sonar.c.rats.reportPath=rats.xml
# sonar.c.vera.reportPath=vera.xml
# sonar.c.valgrind.reportPath=valgrind.xml
# sonar.c.drmemory.reportPath=drmemory/**/results.txt
sonar.sources=src,build/include
sonar.cfamily.build-wrapper-output=build/build_wrapper_output_directory
sonar.projectBaseDir=/home/jbowden/ACROSS/damaris
sonar.cxx.includeDirectories=/usr/include,/home/jbowden/ACROSS/damaris/include/damaris
